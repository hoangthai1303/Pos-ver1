@model System.Data.DataTable
@{
    Layout = "";
    string columnListStr = "";
    string tableName = ViewBag.TableName;
    List<eTraining.BussinessObjects.SelectList> selectLists = ViewBag.StoreProcedures;
    eTraining.BussinessObjects.TableRenderAuto dataSource = ViewBag.DataSource;
    bool isDataSource = false;
    string storeProcedure = "";
    string pageSize = dataSource != null ? dataSource.PageSize.ToString() : "";
    if (dataSource != null && dataSource.ExtentionProperty["DataSource"] != null)
    {
        if(dataSource.ExtentionProperty["DataSource"].ToString() != "")
        {
            isDataSource = true;
            storeProcedure = dataSource.ExtentionProperty["DataSource"].ToString();
        }
    }
}
<link href="/Content/Templates/Plugin/select2/select2.min.css" rel="stylesheet" />

<div class="row" style="margin-bottom:20px;">
    <div class="col-lg-12">
        <label><input type="checkbox" name="IsDataSource" id="IsDataSource" checked="@isDataSource" /> Lấy dữ liệu từ datasource (Store Proceduce)</label>
    </div>
    <div class="col-lg-12 data-source-region" style="display:none;">
        <div class="form-group">
            <label for="">Chọn data source</label>
            <select class="form-control select2" style="width:100%;" name="DataSource" id="DataSource">
                <option value=""> - Chọn store procedure - </option>
                @if (selectLists != null && selectLists.Count() > 0)
                {
                    foreach (eTraining.BussinessObjects.SelectList option in selectLists)
                    {
                        <option value="@option.Name">@option.Name</option>
                    }
                }
            </select>
            <script>
                $('#DataSource').val('@storeProcedure');
            </script>
            <label style="color:#ff6a00;">(*) Các store bắt buộc phải kết thúc bằng <i>"_GetFilter"</i></label>
        </div>
    </div>
</div>

<div class="row" style="margin-bottom:20px;">
    <div class="col-lg-12">
        <div class="form-group">
            <label for="">Số dòng trên 1 trang</label>
            @Html.DropDownList("PageSize",
                          EnumHelper.GetSelectList(typeof(eTraining.Helpers.Defines.ListPageSize)) ,
                          " - Chọn số dòng hiển thị - ",
                          new { @class = "form-control", Name = "PageSize", id= "PageSize" })
            <script>
                $('#PageSize').val('@pageSize');
            </script>
        </div>
    </div>
</div>

<table class="table table-bordered field-select-region">
    <tr>
        <th>Column / Field Name</th>
        <th>Format</th>
        <th>Display</th>
        <th>MaxLength</th>
        <th>MaxWidth</th>
        <th>Sort</th>
    </tr>
    @if (Model != null && Model.Rows.Count > 0)
    {
        foreach (System.Data.DataRow row in Model.Rows)
        {
            string colName = row["COLUMN_NAME"].ToString();
            columnListStr += columnListStr == "" ? colName : ";" + colName;
            <tr>
                <th>@colName</th>
                <th style="min-width: 150px;">
                    @Html.DropDownList("FormatType",
                           EnumHelper.GetSelectList(typeof(eTraining.Helpers.Defines.FormatType)) ,
                           " - Format - ",
                           new { @class = "form-control", Name = colName + "-FormatType", id= colName + "-FormatType" })
                    <script>
                $('#' + '@colName' + '-FormatType').val('@row["FormatType"]');
                    </script>
                </th>
                <th>
                    <input name="@(colName + "-DisplayName")" id="@(colName + "-DisplayName")" class="form-control" value="@row["DisplayName"]" />
                </th>
                <th>
                    <input name="@(colName + "-MaxLength")" id="@(colName + "-MaxLength")" class="form-control" value="@row["MaxLength"]" />
                </th>
                <th>
                    <input name="@(colName + "-MaxWidth")" id="@(colName + "-MaxWidth")" class="form-control" value="@row["MaxWidth"]" />
                </th>
                <th>
                    <input name="@(colName + "-Sort")" id="@(colName + "-Sort")" class="form-control" value="@row["Sort"]" />
                </th>
            </tr>
        }
    }
</table>
<script src="/Content/Templates/Plugin/select2/select2.min.js"></script>
<script>
    $('.select2').select2();
    var isDataSource = '@isDataSource';
    $('#IsDataSource').attr('checked', isDataSource);
    if (isDataSource) {
        $('.data-source-region').show();
        $('.field-select-region').hide();
    }
    var colDataList = [];
    $('.act-save-list').click(function () {
        if (validate()) {
            var colStr = '@columnListStr'.split(';');
            if (colStr.length > 0) {
                for (var i = 0; i < colStr.length; i++) {
                    addDataListColumn(colStr[i]);
                }
            }
            var jColDataFilter = JSON.stringify(colDataList);
            $.ajax({
                type: "POST",
                url: '/Configulation/Auto/CreateFieldList',
                data: "jColData=" + jColDataFilter + '&tableName=' + '@tableName' + '&pageSize=' + $('#PageSize').val() + '&storeProcedure=' + $('#DataSource').val(),
                success: function (response) {
                    if (response > 0) {
                        colDataList = [];
                        $('.close').click();
                    }
                    else {
                        alert('Lưu thất bại');
                    }
                    location.reload();
                }
            });
        }
    });

    $('#IsDataSource').click(function () {
        if ($(this).is(':checked')) {
            $('.data-source-region').show();
            $('.field-select-region').hide();
        }
        else {
            $('.data-source-region').hide();
            $('.field-select-region').show();
            $('#DataSource').val('');
        }
    })

    function addDataListColumn(columnName) {
        var formatType = $('#' + columnName + '-FormatType').val();
        if (formatType != '') {
            var col = {
                TableRender: '@tableName',
                FieldName: columnName,
                FormatType: $('#' + columnName + '-FormatType').val(),
                DisplayName: $('#' + columnName + '-DisplayName').val(),
                MaxLength: $('#' + columnName + '-MaxLength').val(),
                MaxWidth: $('#' + columnName + '-MaxWidth').val(),
                Sort: $('#' + columnName + '-Sort').val()
            }
            colDataList.push(col);
        }
    }

    function validate() {
        if ($('#IsDataSource').is(':checked') && $('#DataSource').val() == '') {
            alert('Yêu cầu chọn store procedure');
            return false;
        }
        if ($('#PageSize').val() == '') {
            alert('Yêu cầu chọn số dòng trên 1 trang');
            return false;
        }
        return true;
    }
</script>