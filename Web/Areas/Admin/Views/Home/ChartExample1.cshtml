
@{
    Layout = "";
}
<div>
    <div>
        <textarea id="code" style="width: 100%;" rows="11">
st=>start: Start:>http://www.google.com[blank]
e=>end:>http://www.google.com
op1=>operation: My Operation
sub1=>subroutine: My Subroutine
cond=>condition: Yes
or No?:>http://www.google.com
io=>inputoutput: catch something...
para=>parallel: parallel tasks

st->op1->cond
cond(yes)->io->e
cond(no)->para
para(path1, bottom)->sub1(right)->op1
para(path2, top)->op1
    </textarea>
    </div>
    <div><button id="run" type="button">Run</button></div>
    <div id="canvas"></div>
</div>
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel4" style="display: none;" aria-hidden="true">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel4">Thông tin</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body pt-0 pb-0">
                <div class="row mt-2">
                    <div class="col-md-12">
                        <img id="img-node" src="" />
                        <div>Tiêu đề:<span id="title-node"></span></div>
                        <div>Ghi chú:<span id="note-node"></span></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-sm" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>
<style type="text/css">
    .end-element {
        fill: #FFCCFF;
    }
</style>
<script>
    var obj = {
        objList: [
            {
                "StepCode": "st",
                "StepName": "Bắt đầu",
                "StepColor": "Primary",
                "StepLink": "http://www.google.com",
                "Description": {
                    "Image": "/Content/Templates/GuruTemplate/assets/images/fpt.png",
                    "Title": "Tiêu đề",
                    "Note": "Ghi chú"
                },
                "DescriptionViewType": "Toolltip",
                "StepType": "start",
            },
            {
                "StepCode": "e",
                "StepName": "Kết thúc",
                "StepColor": "",
                "StepLink": "",
                "Description": {
                    "Image": "/Content/Templates/GuruTemplate/assets/images/fpt.png",
                    "Title": "Tiêu đề",
                    "Note": "Ghi chú"
                },
                "DescriptionViewType": "Toolltip",
                "StepType": "end",
            },
            {
                "StepCode": "op1",
                "StepName": "My Operation",
                "StepColor": "",
                "StepLink": "",
                "Description": {
                    "Image": "/Content/Templates/GuruTemplate/assets/images/fpt.png",
                    "Title": "Tiêu đề",
                    "Note": "Ghi chú"
                },
                "DescriptionViewType": "Toolltip",
                "StepType": "operation",
            },
            {
                "StepCode": "sub1",
                "StepName": "My Subroutine",
                "StepColor": "",
                "StepLink": "",
                "Description": {
                    "Image": "/Content/Templates/GuruTemplate/assets/images/fpt.png",
                    "Title": "Tiêu đề",
                    "Note": "Ghi chú"
                },
                "DescriptionViewType": "Toolltip",
                "StepType": "subroutine",
            },
            {
                "StepCode": "cond",
                "StepName": "Yes or No?",
                "StepColor": "",
                "StepLink": "http://www.google.com",
                "Description": {
                    "Image": "/Content/Templates/GuruTemplate/assets/images/fpt.png",
                    "Title": "Tiêu đề",
                    "Note": "Ghi chú"
                },
                "DescriptionViewType": "Toolltip",
                "StepType": "condition",
            },
            {
                "StepCode": "io",
                "StepName": "catch something...",
                "StepColor": "",
                "StepLink": "",
                "Description": {
                    "Image": "/Content/Templates/GuruTemplate/assets/images/fpt.png",
                    "Title": "Tiêu đề",
                    "Note": "Ghi chú"
                },
                "DescriptionViewType": "Toolltip",
                "StepType": "inputoutput",
            },
            {
                "StepCode": "para",
                "StepName": "parallel tasks",
                "StepColor": "",
                "StepLink": "",
                "Description": {
                    "Image": "/Content/Templates/GuruTemplate/assets/images/fpt.png",
                    "Title": "Tiêu đề",
                    "Note": "Ghi chú"
                },
                "DescriptionViewType": "Toolltip",
                "StepType": "parallel",
            },
        ],
        conection: [
            {
                "StepFrom": "st",
                "StepTo": "op1",
                "CondAction": "",
                // "Caption": "Đồng ý",
                "DirectionsStep": "",//  ---"left,top,right,down,''"
                "StepType": "start",
            },
            {
                "StepFrom": "op1",
                "StepTo": "cond",
                "CondAction": "",
                "DirectionsStep": "",
                "StepType": "operation",
            },
            {
                "StepFrom": "cond",
                "StepTo": "io",
                "CondAction": "yes",
                "DirectionsStep": "",
                "StepType": "condition",
            },
            {
                "StepFrom": "io",
                "StepTo": "e",
                "CondAction": "",
                "DirectionsStep": "",
                "StepType": "inputoutput",
            },
            {
                "StepFrom": "cond",
                "StepTo": "para",
                "CondAction": "no",
                "DirectionsStep": "",
                "StepType": "condition",
            },
            {
                "StepFrom": "para",
                "StepTo": "sub1",
                "CondAction": "",
                "DirectionsStep": "bottom",
                "StepType": "parallel",
            },
            {
                "StepFrom": "sub1",
                "StepTo": "op1",
                "CondAction": "",
                "DirectionsStep": "right",
                "StepType": "subroutine",
            },
            {
                "StepFrom": "para",
                "StepTo": "op1",
                "CondAction": "",
                "DirectionsStep": "top",
                "StepType": "parallel",
            },
        ],
    };
    function clickNode(i) {
        console.log(obj.objList[i]);
        $('#exampleModal').modal('toggle');
        $('#img-node').attr("src", obj.objList[i].Description.Image);
        $('#Title-node').text(obj.objList[i].Description.Title);
        $('#note-node').text(obj.objList[i].Description.Note);
    }
    window.onload = function () {
        var btn = document.getElementById("run"),
            cd = document.getElementById("code"),
            chart;

        (btn.onclick = function () {
            var code = cd.value;
            if (chart) {
                chart.clean();
            }
            var data = '';
            if (obj && obj.objList && obj.conection) {
                for (var i = 0; i < obj.objList.length; i++) {
                    var text = '';
                    text += obj.objList[i].StepCode;
                    text += '=>';
                    text += obj.objList[i].StepType;
                    text += ': ';
                    text += obj.objList[i].StepName;
                    text += ':>';
                    text += 'javascript:clickNode(' + i + ')';
                    // if (obj.objList[i].StepLink) {
                    //     text += ':>';
                    //     text += obj.objList[i].StepLink;
                    //     text += '[blank]';
                    // }
                    text += '\n';
                    data += text;
                }
                data += '\n';
                var pathNumber = 1;
                for (var i = 0; i < obj.conection.length; i++) {
                    var text = '';
                    text += obj.conection[i].StepFrom;
                    if (obj.conection[i].StepType == 'condition') {
                        text += "(" + obj.conection[i].CondAction + ")";
                    } else if (obj.conection[i].StepType == 'parallel') {
                        text += "(path" + pathNumber;
                        pathNumber += 1;
                        if (obj.conection[i].StepType) {
                            text += ", " + obj.conection[i].DirectionsStep + ")";
                        }
                    } else if (obj.conection[i].StepType == 'subroutine') {
                        text += "(" + obj.conection[i].DirectionsStep + ")";
                    }
                    text += '->';
                    text += obj.conection[i].StepTo;
                    text += '\n';
                    data += text;
                }
            }
            console.log(123, data);
            chart = flowchart.parse(data);
            chart.drawSVG('canvas', {
                // 'x': 30,
                // 'y': 50,
                'line-width': 3,
                'maxWidth': 3,//ensures the flowcharts fits within a certian width
                'line-length': 50,
                'text-margin': 10,
                'font-size': 14,
                'font': 'normal',
                'font-family': 'Helvetica',
                'font-weight': 'normal',
                'font-color': 'black',
                'line-color': 'black',
                'element-color': 'black',
                'fill': 'white',
                'yes-text': 'yes',
                'no-text': 'no',
                'arrow-end': 'block',
                'scale': 1,
                'symbols': {
                    'start': {
                        'font-color': 'red',
                        'element-color': 'green',
                        'fill': 'yellow'
                    },
                    'end': {
                        'class': 'end-element'
                    }
                },
                'flowstate': {
                    'past': { 'fill': '#CCCCCC', 'font-size': 12 },
                    'current': { 'fill': 'yellow', 'font-color': 'red', 'font-weight': 'bold' },
                    'future': { 'fill': '#FFFF99' },
                    'request': { 'fill': 'blue' },
                    'invalid': { 'fill': '#444444' },
                    'approved': { 'fill': '#58C4A3', 'font-size': 12, 'yes-text': 'APPROVED', 'no-text': 'n/a' },
                    'rejected': { 'fill': '#C45879', 'font-size': 12, 'yes-text': 'n/a', 'no-text': 'REJECTED' }
                }
            });

            // $('[id^=sub1]').click(function () {
            //     alert('info here');
            // });
        })();

    };

    function myFunction(event, node) {
        console.log("You just clicked this node:", node);
    }

</script>